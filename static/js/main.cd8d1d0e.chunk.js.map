{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","id","name","className","alt","src","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","onSearchMonster","e","value","target","setState","searchText","state","this","fetchMonsters","fetch","then","resp","json","data","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCeAA,EAXF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACLC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,KAEV,OACI,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAWC,IAAI,UAAUC,IAAG,+BAA0BJ,EAA1B,4BAC3C,6BAAKC,QCMAI,G,MAVE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAASC,KAAI,SAACR,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCKZQ,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACER,UAAU,SACVS,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCyCDG,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAkBFC,gBAAkB,SAACC,GACjB,IAAMC,EAAQD,EAAEE,OAAOD,MACvB,EAAKE,SAAS,CAAEC,WAAYH,KAlB5B,EAAKI,MAAQ,CACXd,SAAU,GACVa,WAAY,IALF,E,qDASd,WACEE,KAAKC,kB,2BAGP,WAAiB,IAAD,OACdC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEZ,SAAUqB,S,oBAQ9C,WAAU,IAAD,EAC0BN,KAAKD,MAA9Bd,EADD,EACCA,SAAUa,EADX,EACWA,WACZS,EAAmBtB,EAASuB,QAAO,SAAC9B,GAAD,OACvCA,EAAQE,KAAK6B,cAAcC,SAASZ,EAAWa,wBAGjD,OACE,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,8BACA,cAAC,EAAD,CACEO,YAAY,sBACZC,aAAcW,KAAKP,kBAErB,cAAC,EAAD,CAAUR,SAAUsB,W,GAtCVK,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd8d1d0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nimport './card.styles.css';\n\nconst Card = ({monster}) => {\n  const { id, name } = monster;\n\n    return (\n        <div className=\"card-container\">\n          <img className=\"card-img\" alt=\"Monster\" src={`https://robohash.org/${id}?set=set4&size=180x180`} />\n          <h2>{name}</h2>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"../card/card.component\";\n\nimport \"./card-list.styles.css\";\n\nconst CardList = ({ monsters }) => {\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchText: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMonsters();\n  }\n\n  fetchMonsters() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((resp) => resp.json())\n      .then((data) => this.setState({ monsters: data }));\n  }\n\n  onSearchMonster = (e) => {\n    const value = e.target.value;\n    this.setState({ searchText: value });\n  };\n\n  render() {\n    const { monsters, searchText } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchText.toLocaleLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"app-title\">Monsters Rolodex</div>\n        <SearchBox\n          placeholder=\"Type here to search\"\n          handleChange={this.onSearchMonster}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}